{"version":3,"sources":["components/SearchInput.js","components/UsersTable.js","App.js","index.js"],"names":["SearchInput","props","searchName","setSearchName","React","createElement","TextField","variant","InputProps","startAdornment","InputAdornment","position","Search","style","fontSize","sx","width","placeholder","value","onChange","e","target","UsersTable","userResults","TableContainer","border","borderRadius","Table","TableHead","TableRow","TableCell","backgroundColor","fontWeight","align","TableBody","map","user","key","id","Avatar","alt","login","src","avatar_url","Link","href","html_url","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","App","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setUserResults","_useState5","_useState6","error","setError","fetchUsersAndUpdateState","_ref","_asyncToGenerator","_callee","search","response","data","_context","fetch","concat","headers","Accept","Authorization","process","json","items","message","_x","apply","arguments","debounceFn","useCallback","throttle","useEffect","Stack","display","flexDirection","alignItems","height","py","px","spacing","Typography","Alert","severity","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b4feec96.chunk.js","sourcesContent":["import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Search from \"@mui/icons-material/Search\";\n\nconst SearchInput = (props) => {\n    const { searchName, setSearchName } = props;\n    return (\n        <TextField\n            variant=\"outlined\"\n            InputProps={{\n                startAdornment: (\n                    <InputAdornment position=\"start\">\n                        <Search />\n                    </InputAdornment>\n                ),\n                style: { fontSize: \"1.5rem\" },\n            }}\n            sx={{ width: \"60%\" }}\n            placeholder=\"Search user...\"\n            value={searchName}\n            onChange={(e) => setSearchName(e.target.value)}\n        />\n    );\n};\n\nexport default SearchInput;\n","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Link from \"@mui/material/Link\";\n\nconst UsersTable = (props) => {\n    const { userResults } = props;\n    return (\n        <TableContainer\n            sx={{ border: \"1px solid #d1d3d4\", borderRadius: \"5px\" }}\n        >\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell sx={{ backgroundColor: \"#f5f5f5\", fontWeight: \"600\" }}>Avatar</TableCell>\n                        <TableCell sx={{ backgroundColor: \"#f5f5f5\", fontWeight: \"600\" }} align=\"center\">Username</TableCell>\n                        <TableCell sx={{ backgroundColor: \"#f5f5f5\", fontWeight: \"600\" }} align=\"right\">Profile</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {userResults.map((user) => (\n                        <TableRow key={user.id}>\n                            <TableCell>\n                                <Avatar\n                                    alt={user.login}\n                                    src={user.avatar_url}\n                                />\n                            </TableCell>\n                            <TableCell align=\"center\">{user.login}</TableCell>\n                            <TableCell align=\"right\">\n                                <Link target=\"_blank\" href={user.html_url}>\n                                    Click here\n                                </Link>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n};\n\nexport default UsersTable;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport Alert from \"@mui/material/Alert\";\nimport SearchInput from \"./components/SearchInput\";\nimport UsersTable from \"./components/UsersTable\";\nimport { throttle } from \"lodash\";\n\nconst App = () => {\n    const [searchName, setSearchName] = useState(\"\");\n    const [userResults, setUserResults] = useState([]);\n    const [error, setError] = useState();\n\n    const fetchUsersAndUpdateState = async (search) => {\n        const response = await fetch(\n            `https://api.github.com/search/users?q=${search} in:name&sort=followers&order=desc`,\n            {\n                headers: {\n                    Accept: \"application/vnd.github+json\",\n                    Authorization: `Bearer ${process.env.REACT_APP_GITHUB_TOKEN}`,\n                },\n            }\n        );\n        const data = await response.json();\n        if (data.items) {\n            setUserResults(data.items);\n            setError();\n        } else {\n            setUserResults([]);\n            setError(data.message || \"Something went wrong, please try in sometime!\");\n        }\n    };\n\n    const debounceFn = useCallback(throttle(fetchUsersAndUpdateState, 300), []);\n\n    useEffect(() => {\n        if (searchName) {\n            debounceFn(searchName);\n        } else {\n            setUserResults([]);\n        }\n    }, [searchName]);\n\n    return (\n        <Stack\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            height=\"calc(100vh - 6rem)\"\n            py={3}\n            px={8}\n            spacing={2}\n        >\n            <Typography variant=\"h2\">GitHub Users</Typography>\n            <SearchInput\n                searchName={searchName}\n                setSearchName={setSearchName}\n            />\n            <UsersTable userResults={userResults} />\n            {\n                error\n                ? <Alert severity=\"error\">{error}</Alert>\n                : null\n            }\n        </Stack>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);\n"],"sourceRoot":""}